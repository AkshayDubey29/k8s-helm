// Code generated by protoc-gen-go.
// source: hapi/chart/metadata.proto
// DO NOT EDIT!

package chart

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Metadata_Engine int32

const (
	Metadata_UNKNOWN Metadata_Engine = 0
	Metadata_GOTPL   Metadata_Engine = 1
)

var Metadata_Engine_name = map[int32]string{
	0: "UNKNOWN",
	1: "GOTPL",
}
var Metadata_Engine_value = map[string]int32{
	"UNKNOWN": 0,
	"GOTPL":   1,
}

func (x Metadata_Engine) String() string {
	return proto.EnumName(Metadata_Engine_name, int32(x))
}
func (Metadata_Engine) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1, 0} }

type TemplateEngine_Kind int32

const (
	TemplateEngine_UNKNOWN TemplateEngine_Kind = 0
	TemplateEngine_GOTPL   TemplateEngine_Kind = 1
)

var TemplateEngine_Kind_name = map[int32]string{
	0: "UNKNOWN",
	1: "GOTPL",
}
var TemplateEngine_Kind_value = map[string]int32{
	"UNKNOWN": 0,
	"GOTPL":   1,
}

func (x TemplateEngine_Kind) String() string {
	return proto.EnumName(TemplateEngine_Kind_name, int32(x))
}
func (TemplateEngine_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2, 0} }

// Maintainer describes a Chart maintainer.
type Maintainer struct {
	// Name is a user name or organization name
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Email is an optional email address to contact the named maintainer
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *Maintainer) Reset()                    { *m = Maintainer{} }
func (m *Maintainer) String() string            { return proto.CompactTextString(m) }
func (*Maintainer) ProtoMessage()               {}
func (*Maintainer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// 	Metadata for a Chart file. This models the structure of a Chart.yaml file.
//
// 	Spec: https://k8s.io/helm/blob/master/docs/design/chart_format.md#the-chart-file
type Metadata struct {
	// The name of the chart
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The URL to a relevant project page, git repo, or contact person
	Home string `protobuf:"bytes,2,opt,name=home" json:"home,omitempty"`
	// Source is the URL to the source code of this chart
	Sources []string `protobuf:"bytes,3,rep,name=sources" json:"sources,omitempty"`
	// A SemVer 2 conformant version string of the chart
	Version string `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	// A one-sentence description of the chart
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	// A list of string keywords
	Keywords []string `protobuf:"bytes,6,rep,name=keywords" json:"keywords,omitempty"`
	// A list of name and URL/email address combinations for the maintainer(s)
	Maintainers []*Maintainer `protobuf:"bytes,7,rep,name=maintainers" json:"maintainers,omitempty"`
	// The name of the template engine to use. Defaults to 'gotpl'.
	Engine *TemplateEngine `protobuf:"bytes,8,opt,name=engine" json:"engine,omitempty"`
	// The URL to an icon file.
	Icon string `protobuf:"bytes,9,opt,name=icon" json:"icon,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Metadata) GetMaintainers() []*Maintainer {
	if m != nil {
		return m.Maintainers
	}
	return nil
}

func (m *Metadata) GetEngine() *TemplateEngine {
	if m != nil {
		return m.Engine
	}
	return nil
}

// TemplateEngine is the template engine descriptor.
//
// The default is gotpl.
// See https://github.com/kubernetes/helm/issues/856
type TemplateEngine struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *TemplateEngine) Reset()                    { *m = TemplateEngine{} }
func (m *TemplateEngine) String() string            { return proto.CompactTextString(m) }
func (*TemplateEngine) ProtoMessage()               {}
func (*TemplateEngine) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func init() {
	proto.RegisterType((*Maintainer)(nil), "hapi.chart.Maintainer")
	proto.RegisterType((*Metadata)(nil), "hapi.chart.Metadata")
	proto.RegisterType((*TemplateEngine)(nil), "hapi.chart.TemplateEngine")
	proto.RegisterEnum("hapi.chart.Metadata_Engine", Metadata_Engine_name, Metadata_Engine_value)
	proto.RegisterEnum("hapi.chart.TemplateEngine_Kind", TemplateEngine_Kind_name, TemplateEngine_Kind_value)
}

var fileDescriptor2 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x51, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xb6, 0x5b, 0x3f, 0xdf, 0x82, 0x8c, 0x20, 0x12, 0x77, 0x90, 0xd2, 0x93, 0xa7, 0x0e, 0x2a,
	0x88, 0x67, 0x51, 0x3c, 0xcc, 0x75, 0x52, 0x26, 0x82, 0xb7, 0xd8, 0x06, 0x1b, 0x5c, 0x9b, 0x92,
	0x44, 0xc5, 0x7f, 0xe8, 0xcf, 0x32, 0x4d, 0xf7, 0x51, 0x61, 0x1e, 0x0a, 0xef, 0xfb, 0x7c, 0x35,
	0x4f, 0x02, 0x67, 0x15, 0x69, 0xd9, 0xac, 0xa8, 0x88, 0x50, 0xb3, 0x9a, 0x2a, 0x52, 0x12, 0x45,
	0x92, 0x56, 0x70, 0xc5, 0x11, 0x74, 0x54, 0x62, 0xa8, 0xf8, 0x0a, 0x60, 0x41, 0x58, 0xa3, 0xf4,
	0x47, 0x05, 0x42, 0x60, 0x37, 0xa4, 0xa6, 0xd8, 0x8a, 0xac, 0x8b, 0x20, 0x37, 0x33, 0x3a, 0x01,
	0x87, 0xd6, 0x84, 0xad, 0xf1, 0xc8, 0x80, 0xfd, 0x12, 0xff, 0x8c, 0xc0, 0x5f, 0x6c, 0x62, 0x0f,
	0xda, 0x34, 0x56, 0x71, 0x8d, 0xf5, 0x2e, 0x33, 0x23, 0x0c, 0x9e, 0xe4, 0x1f, 0xa2, 0xa0, 0x12,
	0x8f, 0xa3, 0xb1, 0x86, 0xb7, 0x6b, 0xc7, 0x7c, 0x52, 0x21, 0x19, 0x6f, 0xb0, 0x6d, 0x0c, 0xdb,
	0x15, 0x45, 0x10, 0x96, 0x54, 0x16, 0x82, 0xb5, 0xaa, 0x63, 0x1d, 0xc3, 0x0e, 0x21, 0x34, 0x05,
	0xff, 0x9d, 0x7e, 0x7f, 0x71, 0x51, 0x4a, 0xec, 0x9a, 0xd8, 0xdd, 0x8e, 0xae, 0x21, 0xac, 0x77,
	0xf5, 0x24, 0xf6, 0x34, 0x1d, 0xa6, 0xa7, 0xc9, 0xfe, 0x02, 0x92, 0x7d, 0xfb, 0x7c, 0x28, 0x45,
	0x29, 0xb8, 0xb4, 0x79, 0xd3, 0x33, 0xf6, 0xf5, 0x2f, 0xc3, 0x74, 0x3a, 0x34, 0xad, 0x68, 0xdd,
	0xae, 0x89, 0xa2, 0x77, 0x46, 0x91, 0x6f, 0x94, 0x5d, 0x67, 0x56, 0xe8, 0x43, 0x06, 0x7d, 0xe7,
	0x6e, 0x8e, 0x23, 0x70, 0x7b, 0x15, 0x0a, 0xc1, 0x7b, 0xca, 0xe6, 0xd9, 0xf2, 0x39, 0x9b, 0x1c,
	0xa1, 0x00, 0x9c, 0xfb, 0xe5, 0xea, 0xf1, 0x61, 0x62, 0xc5, 0xb7, 0x70, 0xfc, 0x37, 0xef, 0xd0,
	0x7d, 0xc6, 0xe7, 0x60, 0xcf, 0x59, 0x53, 0xfe, 0x97, 0x72, 0xe3, 0xbd, 0x38, 0xe6, 0x6c, 0xaf,
	0xae, 0x79, 0xe4, 0xcb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xd5, 0xde, 0x46, 0x01, 0x02,
	0x00, 0x00,
}
